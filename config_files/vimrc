if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Plugins Installed:
" lightline: better status bar
" fzf.vim: fuzzy finder for vim
" ranger.vim: ranger plugin for vim
" vim-peekaboo: Pop up menu with registers
call plug#begin('~/.vim/plugged')
	Plug 'itchyny/lightline.vim'
	Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
	Plug 'junegunn/fzf.vim'
	Plug 'francoiscabrol/ranger.vim'
	Plug 'junegunn/vim-peekaboo'
call plug#end()

" Miscellaneous useful maps
let mapleader = "," " yank to system register uses leader
" vimdiff maps. also check do and dp
noremap dO :diffoff!<CR> 
" turns off diff for all active buffers
noremap dt :diffthis<CR>
noremap <leader>s :set scrollbind!<CR>
noremap <leader>n :set relativenumber!<CR>
noremap <C-h> :%s///gc<Left><Left><Left><Left>

colorscheme ron
syntax on
set mouse=a

"This is for wraping left and right so that cursor left at the beginning of the line goes to end of the previous line
set whichwrap+=<,>,h,l,[,] 

"The following piece of code for moving through wrapped lines refer:[http://vim.wikia.com/wiki/Move_through_wrapped_lines]
map <silent> <Up> gk
imap <silent> <Up> <C-o>gk
map <silent> <Down> gj
imap <silent> <Down> <C-o>gj
map <silent> <home> g<home>
imap <silent> <home> <C-o>g<home>
map <silent> <End> g<End>
imap <silent> <End> <C-o>g<End>
 
setlocal linebreak
setlocal nolist
setlocal display+=lastline

" Shows line number to the left. set nonu to turn off.
set number
highlight LineNr ctermfg=grey

" copy to system register (primary/clipboard)
noremap <leader>Y "*y
noremap <leader>P "*p
noremap <leader>y "+y
noremap <leader>p "+p

" ranger vim integration
let g:ranger_map_keys = 0
map <leader>r :RangerWorkingDirectoryNewTab<CR>
let g:ranger_command_override = 'ranger --cmd "set show_hidden=true"'

" Work with lightline
set laststatus=2
set noshowmode

" Work with fzf.vim 
map <leader>f :Files<CR> " Check ^x, ^v while in fzf
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit',
  \ 'ctrl-y': {lines -> setreg('*', join(lines, "\n"))}}
" https://github.com/junegunn/fzf.vim for more detailed list

" Tab shortcuts: avoid using tabs unless you have mouse mode on. Pain in the ass.
noremap <leader>t<Right> :tabn<CR>
noremap <leader>tl :tabn<CR>
noremap <leader>t<Left> :tabp<CR>
noremap <leader>th :tabp<CR>
noremap <leader>tn :tabnew<CR>
