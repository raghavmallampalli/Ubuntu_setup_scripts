# fzf
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# fasd
fasd_cache="$HOME/.fasd-init-bash"
if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
  fasd --init posix-alias bash-hook bash-ccomp bash-ccomp-install >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache


# fzf-fasd integration
j () {
    fasdlist=$( fasd -d -l -r $1 | \
      fzf --query="$1 " --select-1 --exit-0 --height=25% --reverse --tac --no-sort --cycle) &&
    cd "$fasdlist"
}
v () {
    export fasdlist=$( fasd -f -l -r $1 | \
        fzf --query="$1 " --select-1 --exit-0 --height=25% --reverse --tac --no-sort --cycle)
    echo "Opening $fasdlist. Press any key to continue."
    # Do not remove this line nvim opens with artefacts without it.
    read dump
    vim -O "$fasdlist"
}

if [ -f ~/.aliases ]; then
  source ~/.aliases
fi

# bat configuration
export BAT_THEME="Dracula"
export BAT_PAGER="less -FRX"

############################################
# tmux auto attach
# automatically attaches 'General' or 'General-Minimal' if it exists and is not attached.
# Creates if it does not.
if grep -qEi "(Microsoft|WSL)" /proc/version &> /dev/null ; then
	Session="General-Minimal"
else
	Session="General"
fi
if [[ -z ${TERM_PROGRAM} && -z ${TMUX} ]]; then
	tmux ls 2>/dev/null | grep $Session >/dev/null
	if [ $? -eq 0 ]; then
		tmux ls | grep $Session | grep 'attached' >/dev/null
		if [ $? -eq 1 ]; then
			tmux -u attach -t $Session
		fi
	else
		tgex # Or tsimp 
	fi
fi
###########################################
